package controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.PagingVO;
import handler.PagingHandler;
import service.BoardServiceImpl;
import service.Service;

@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
   private static final long serialVersionUID = 1L;
   //로그객체 선언
    private static final Logger log = LoggerFactory.getLogger(BoardController.class);
    //requestDespatcher 객체
    private RequestDispatcher rdp;
    //service interface
    private Service bsv;
    //dest Page : 목적지 주소 저장변수
    private String destPage;
    //isOk
    private int isOk;
    
    public BoardController() {
       // bsv의 객체 연결
       bsv = new BoardServiceImpl();
    }

   protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      // encoding 설정 , contentType 설정 , 요청경로 파악
      request.setCharacterEncoding("utf-8");
      response.setCharacterEncoding("utf-8");
      response.setContentType("text/html; charset=UTF-8");
      //jsp에서 오는 요청 주소
      String uri = request.getRequestURI(); // /brd/register
      String path = uri.substring(uri.lastIndexOf("/")+1); // register
      log.info("path" + path);
      
      switch(path) {
      case "register" :
         destPage = "/board/register.jsp";
         break;
      
      case "insert" :
         try {
            String title = request.getParameter("title");
            String writer = request.getParameter("writer");
            String content = request.getParameter("content");
            log.info("insert check 1");
            
            BoardVO bvo = new BoardVO(title,writer,content);
            isOk = bsv.insert(bvo);
            
            destPage = "/index.jsp";
         } catch (Exception e) {
            e.printStackTrace();
            log.info("insert error");
         }
         break;
      case "list" :
         try {
            log.info("list check 1");
            List<BoardVO> list = bsv.getList();
            request.setAttribute("list", list);
            destPage="/board/list.jsp";
         } catch (Exception e) {
            e.printStackTrace();
            log.info("list error");
         }
         break;
      case "pageList" :
         try {
            // jsp에서 파라미터 받기
            PagingVO pgvo = new PagingVO(); // 1, 10
            
            if(request.getParameter("pageNo") != null) {
               int pageNo = Integer.parseInt(request.getParameter("pageNo"));
               int qty = Integer.parseInt(request.getParameter("qty"));
               log.info("pageNo : "+pageNo   +"qty : "+qty);
               pgvo = new PagingVO(pageNo, qty);
            }
            // 검색어 받기
            String type = request.getParameter("type");
            String keyword = request.getParameter("keyword");
            pgvo.setType(type);
            pgvo.setKeyword(keyword);
            
            log.info("type : "+pgvo.getType()+"  keyword : "+pgvo.getKeyword());
            
            // pagingVO , totalCount
            int totalCount = bsv.getTotalCount(); // DB에서 전체 카운트 요청
            log.info("전체 게시글 수:"+totalCount);
            // bsv pgvo 주고 , limit 적용한 리스트 가져오기
            List<BoardVO> list = bsv.getPageList(pgvo);
            request.setAttribute("list", list);
            // 페이지 정보를 list.jsp로 보내기
            PagingHandler ph = new PagingHandler(pgvo, totalCount);
            request.setAttribute("ph", ph);
            log.info("paging 성공");
            destPage = "/board/list.jsp";
         } catch (Exception e) {
            e.printStackTrace();
            log.info("pageList error");
         }
         break;
         
      case "detail" :
         try {
            log.info("detail check 1");
            int bno = Integer.parseInt(request.getParameter("bno"));
            BoardVO bvo = bsv.getDetail(bno);
            log.info("detail check 4");
            request.setAttribute("bvo", bvo);
            destPage="/board/detail.jsp";
            
         } catch (Exception e) {
            e.printStackTrace();
            log.info("detail error");
         }
         break;
      case "modify" :
         try {
            log.info("modify check 1");
            int bno = Integer.parseInt(request.getParameter("bno"));      
            BoardVO bvo = bsv.getDetail(bno);
            log.info("modify check 4");
            request.setAttribute("bvo", bvo);
            destPage="/board/modify.jsp";
         } catch (Exception e) {
            e.printStackTrace();
            log.info("modify error");
         }
         break;
      case "edit" :
         try {
            log.info("edit check 1");
            int bno = Integer.parseInt(request.getParameter("bno"));
            String title = request.getParameter("title");
            String content = request.getParameter("content");
            BoardVO bvo = new BoardVO(bno,title,content);
            isOk = bsv.modify(bvo);
            destPage="detail?bno="+bno;
         } catch (Exception e) {
            e.printStackTrace();
            log.info("edit error");
         }
         break;
      case "remove" :
         try {
            log.info("remove check 1");
            int bno = Integer.parseInt(request.getParameter("bno"));
            isOk = bsv.remove(bno);
            destPage = "pageList";
            
         } catch (Exception e) {
            e.printStackTrace();
            log.info("remove error");
         }
      }
      rdp = request.getRequestDispatcher(destPage);
      rdp.forward(request, response);
   }
       

   protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      service(request,response);
   }
   
   protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
      service(request,response);
   }

}